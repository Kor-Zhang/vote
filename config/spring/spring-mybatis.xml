<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx">

	<!-- 加载数据库配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置c3p0数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 连接参数 -->
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="${c3p0.maxActive}" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${c3p0.maxIdle}" />
	</bean>


	<!-- 配置mybatis的sqlSessionFactory -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<!-- 配置mybaits的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"></property>
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 在与spring整合时,mybatis提供自动扫描的类,可以扫描mapper成为实例; 
		要求mapper接口和其xml同名且在同包下; 
		扫描出来的mapper的bean的id为该mapper接口的首字母小写 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 配置需要扫描的包 -->
		<property name="basePackage" value="com.zk.vote.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>





	<!-- 配置事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 通知 -->
	<tx:advice id="ta" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.RuntimeException" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<!-- aop配置 -->
	<aop:config>
		<!-- 切入点 -->
		<aop:pointcut id="pc"
			expression="execution(public * com.zk.vote.service.impl.*.*(..))" /> <!--把事务控制在Service层 -->

		<!-- 整合切入点和通知到顾问 -->
		<aop:advisor pointcut-ref="pc" advice-ref="ta" />
	</aop:config>
	<!--使用注释事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>